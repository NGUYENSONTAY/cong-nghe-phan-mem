{"ast":null,"code":"import axios from 'axios';\nimport toast from 'react-hot-toast';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // Xử lý lỗi từ server\n    const message = error.response.data.message || 'Đã có lỗi xảy ra từ máy chủ.';\n    toast.error(message);\n    if (error.response.status === 401) {\n      // Xử lý lỗi xác thực, ví dụ: logout người dùng\n      localStorage.removeItem('token');\n      // Có thể redirect về trang đăng nhập\n      // window.location.href = '/login';\n    }\n  } else if (error.request) {\n    // Lỗi không nhận được phản hồi\n    toast.error('Không thể kết nối đến máy chủ. Vui lòng kiểm tra lại đường truyền.');\n  } else {\n    // Lỗi khác\n    toast.error('Đã có lỗi không xác định xảy ra.');\n  }\n  return Promise.reject(error);\n});\nexport { api };","map":{"version":3,"names":["axios","toast","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","message","data","status","removeItem"],"sources":["/home/diengb/bansach/bookstore/frontend/src/api/api.ts"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response) {\n      // Xử lý lỗi từ server\n      const message = error.response.data.message || 'Đã có lỗi xảy ra từ máy chủ.';\n      toast.error(message);\n      \n      if (error.response.status === 401) {\n        // Xử lý lỗi xác thực, ví dụ: logout người dùng\n        localStorage.removeItem('token');\n        // Có thể redirect về trang đăng nhập\n        // window.location.href = '/login';\n      }\n    } else if (error.request) {\n      // Lỗi không nhận được phản hồi\n      toast.error('Không thể kết nối đến máy chủ. Vui lòng kiểm tra lại đường truyền.');\n    } else {\n      // Lỗi khác\n      toast.error('Đã có lỗi không xác định xảy ra.');\n    }\n    return Promise.reject(error);\n  }\n);\n\n\nexport { api }; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDd,GAAG,CAACO,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB;IACA,MAAMC,OAAO,GAAGJ,KAAK,CAACG,QAAQ,CAACE,IAAI,CAACD,OAAO,IAAI,8BAA8B;IAC7EnB,KAAK,CAACe,KAAK,CAACI,OAAO,CAAC;IAEpB,IAAIJ,KAAK,CAACG,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;MACjC;MACAR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;MAChC;MACA;IACF;EACF,CAAC,MAAM,IAAIP,KAAK,CAACN,OAAO,EAAE;IACxB;IACAT,KAAK,CAACe,KAAK,CAAC,oEAAoE,CAAC;EACnF,CAAC,MAAM;IACL;IACAf,KAAK,CAACe,KAAK,CAAC,kCAAkC,CAAC;EACjD;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAGD,SAASd,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}