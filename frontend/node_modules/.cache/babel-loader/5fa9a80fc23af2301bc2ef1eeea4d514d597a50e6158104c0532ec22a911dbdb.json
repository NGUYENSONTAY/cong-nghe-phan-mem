{"ast":null,"code":"import { api } from './api';\n// Adapter: convert backend Book -> frontend Book\nconst adaptBook = b => {\n  var _ref, _b$id, _b$author$name, _b$author, _b$description, _b$price, _ref2, _b$stockQuantity, _ref3, _b$category$id, _b$category, _b$category2, _b$category$name, _b$category3, _b$category$descripti, _b$category4, _b$category$createdAt, _b$category5, _b$category$updatedAt, _b$category6, _b$images, _b$createdAt, _b$updatedAt;\n  return {\n    _id: (_ref = (_b$id = b.id) !== null && _b$id !== void 0 ? _b$id : b._id) !== null && _ref !== void 0 ? _ref : '',\n    title: b.title,\n    author: typeof b.author === 'string' ? b.author : (_b$author$name = (_b$author = b.author) === null || _b$author === void 0 ? void 0 : _b$author.name) !== null && _b$author$name !== void 0 ? _b$author$name : '',\n    description: (_b$description = b.description) !== null && _b$description !== void 0 ? _b$description : '',\n    price: Number((_b$price = b.price) !== null && _b$price !== void 0 ? _b$price : 0),\n    quantity: (_ref2 = (_b$stockQuantity = b.stockQuantity) !== null && _b$stockQuantity !== void 0 ? _b$stockQuantity : b.quantity) !== null && _ref2 !== void 0 ? _ref2 : 0,\n    category: {\n      _id: (_ref3 = (_b$category$id = (_b$category = b.category) === null || _b$category === void 0 ? void 0 : _b$category.id) !== null && _b$category$id !== void 0 ? _b$category$id : (_b$category2 = b.category) === null || _b$category2 === void 0 ? void 0 : _b$category2._id) !== null && _ref3 !== void 0 ? _ref3 : '',\n      name: (_b$category$name = (_b$category3 = b.category) === null || _b$category3 === void 0 ? void 0 : _b$category3.name) !== null && _b$category$name !== void 0 ? _b$category$name : '',\n      description: (_b$category$descripti = (_b$category4 = b.category) === null || _b$category4 === void 0 ? void 0 : _b$category4.description) !== null && _b$category$descripti !== void 0 ? _b$category$descripti : '',\n      createdAt: (_b$category$createdAt = (_b$category5 = b.category) === null || _b$category5 === void 0 ? void 0 : _b$category5.createdAt) !== null && _b$category$createdAt !== void 0 ? _b$category$createdAt : '',\n      updatedAt: (_b$category$updatedAt = (_b$category6 = b.category) === null || _b$category6 === void 0 ? void 0 : _b$category6.updatedAt) !== null && _b$category$updatedAt !== void 0 ? _b$category$updatedAt : ''\n    },\n    images: (_b$images = b.images) !== null && _b$images !== void 0 ? _b$images : b.imageUrl ? [b.imageUrl] : [],\n    createdAt: (_b$createdAt = b.createdAt) !== null && _b$createdAt !== void 0 ? _b$createdAt : '',\n    updatedAt: (_b$updatedAt = b.updatedAt) !== null && _b$updatedAt !== void 0 ? _b$updatedAt : ''\n  };\n};\nconst adaptBooks = arr => arr.map(adaptBook);\nexport const booksAPI = {\n  getBooks: async (page, limit, filter) => {\n    const response = await api.get('/books', {\n      params: {\n        page,\n        limit,\n        ...filter\n      }\n    });\n    const backendData = response.data;\n\n    // Adapt backend Spring Boot pagination format to frontend format\n    return {\n      data: adaptBooks(backendData.content || []),\n      totalItems: backendData.totalElements || 0,\n      totalPages: backendData.totalPages || 0,\n      currentPage: backendData.number || 0\n    };\n  },\n  getBookById: async id => {\n    const response = await api.get(`/books/${id}`);\n    return adaptBook(response.data);\n  },\n  createBook: async bookData => {\n    console.log('üìö Creating book with data:', bookData);\n\n    // Transform frontend data to backend format\n    const backendData = {\n      title: bookData.title,\n      description: bookData.description,\n      price: bookData.price,\n      stockQuantity: bookData.quantity,\n      // quantity -> stockQuantity\n      categoryId: bookData.category,\n      // category -> categoryId\n      authorId: bookData.authorId,\n      // Use authorId instead of author name\n      images: bookData.images\n    };\n    console.log('üì§ Sending to backend:', backendData);\n    try {\n      const response = await api.post('/books', backendData);\n      console.log('‚úÖ Backend response:', response.data);\n      return adaptBook(response.data);\n    } catch (error) {\n      console.error('‚ùå Create book error:', error);\n      throw error;\n    }\n  },\n  updateBook: async (id, bookData) => {\n    console.log('üìö Updating book with data:', bookData);\n\n    // Transform frontend data to backend format\n    const backendData = {\n      title: bookData.title,\n      description: bookData.description,\n      price: bookData.price,\n      stockQuantity: bookData.quantity,\n      // quantity -> stockQuantity\n      categoryId: bookData.category,\n      // category -> categoryId\n      authorId: bookData.authorId,\n      // Use authorId instead of author name\n      images: bookData.images\n    };\n    console.log('üì§ Sending update to backend:', backendData);\n    try {\n      const response = await api.put(`/books/${id}`, backendData);\n      console.log('‚úÖ Backend update response:', response.data);\n      return adaptBook(response.data);\n    } catch (error) {\n      console.error('‚ùå Update book error:', error);\n      throw error;\n    }\n  },\n  deleteBook: async id => {\n    await api.delete(`/books/${id}`);\n  },\n  getLatestBooks: async (limit = 8) => {\n    const response = await api.get('/books/latest', {\n      params: {\n        limit\n      }\n    });\n    return adaptBooks(response.data);\n  },\n  getBestSellers: async (limit = 4) => {\n    const response = await api.get('/books/bestsellers', {\n      params: {\n        limit\n      }\n    });\n    return adaptBooks(response.data);\n  }\n};","map":{"version":3,"names":["api","adaptBook","b","_ref","_b$id","_b$author$name","_b$author","_b$description","_b$price","_ref2","_b$stockQuantity","_ref3","_b$category$id","_b$category","_b$category2","_b$category$name","_b$category3","_b$category$descripti","_b$category4","_b$category$createdAt","_b$category5","_b$category$updatedAt","_b$category6","_b$images","_b$createdAt","_b$updatedAt","_id","id","title","author","name","description","price","Number","quantity","stockQuantity","category","createdAt","updatedAt","images","imageUrl","adaptBooks","arr","map","booksAPI","getBooks","page","limit","filter","response","get","params","backendData","data","content","totalItems","totalElements","totalPages","currentPage","number","getBookById","createBook","bookData","console","log","categoryId","authorId","post","error","updateBook","put","deleteBook","delete","getLatestBooks","getBestSellers"],"sources":["/home/diengb/bansach/bookstore/frontend/src/api/booksAPI.ts"],"sourcesContent":["import { api } from './api';\nimport { Book, PaginatedResponse } from '../types';\nimport { BookFormData } from '../components/admin/BookForm';\n\n// Adapter: convert backend Book -> frontend Book\nconst adaptBook = (b: any): Book => ({\n  _id: b.id ?? b._id ?? '',\n  title: b.title,\n  author: (typeof b.author === 'string') ? b.author : b.author?.name ?? '',\n  description: b.description ?? '',\n  price: Number(b.price ?? 0),\n  quantity: b.stockQuantity ?? b.quantity ?? 0,\n  category: {\n    _id: b.category?.id ?? b.category?._id ?? '',\n    name: b.category?.name ?? '',\n    description: b.category?.description ?? '',\n    createdAt: b.category?.createdAt ?? '',\n    updatedAt: b.category?.updatedAt ?? '',\n  },\n  images: b.images ?? (b.imageUrl ? [b.imageUrl] : []),\n  createdAt: b.createdAt ?? '',\n  updatedAt: b.updatedAt ?? '',\n});\n\nconst adaptBooks = (arr: any[]): Book[] => arr.map(adaptBook);\n\nexport const booksAPI = {\n  getBooks: async (\n    page: number,\n    limit: number,\n    filter: {\n      title?: string;\n      category?: string;\n      minPrice?: number;\n      maxPrice?: number;\n      sortBy?: string;\n      sortDir?: string;\n    }\n  ): Promise<PaginatedResponse<Book>> => {\n    const response = await api.get('/books', { params: { page, limit, ...filter } });\n    const backendData = response.data;\n    \n    // Adapt backend Spring Boot pagination format to frontend format\n    return {\n      data: adaptBooks(backendData.content || []),\n      totalItems: backendData.totalElements || 0,\n      totalPages: backendData.totalPages || 0,\n      currentPage: backendData.number || 0,\n    };\n  },\n\n  getBookById: async (id: string): Promise<Book> => {\n    const response = await api.get(`/books/${id}`);\n    return adaptBook(response.data);\n  },\n\n  createBook: async (bookData: BookFormData): Promise<Book> => {\n    console.log('üìö Creating book with data:', bookData);\n    \n    // Transform frontend data to backend format\n    const backendData = {\n      title: bookData.title,\n      description: bookData.description,\n      price: bookData.price,\n      stockQuantity: bookData.quantity, // quantity -> stockQuantity\n      categoryId: bookData.category, // category -> categoryId\n      authorId: bookData.authorId, // Use authorId instead of author name\n      images: bookData.images,\n    };\n    \n    console.log('üì§ Sending to backend:', backendData);\n    \n    try {\n      const response = await api.post('/books', backendData);\n      console.log('‚úÖ Backend response:', response.data);\n      return adaptBook(response.data);\n    } catch (error) {\n      console.error('‚ùå Create book error:', error);\n      throw error;\n    }\n  },\n\n  updateBook: async (id: string, bookData: BookFormData): Promise<Book> => {\n    console.log('üìö Updating book with data:', bookData);\n    \n    // Transform frontend data to backend format\n    const backendData = {\n      title: bookData.title,\n      description: bookData.description,\n      price: bookData.price,\n      stockQuantity: bookData.quantity, // quantity -> stockQuantity\n      categoryId: bookData.category, // category -> categoryId\n      authorId: bookData.authorId, // Use authorId instead of author name\n      images: bookData.images,\n    };\n    \n    console.log('üì§ Sending update to backend:', backendData);\n    \n    try {\n      const response = await api.put(`/books/${id}`, backendData);\n      console.log('‚úÖ Backend update response:', response.data);\n      return adaptBook(response.data);\n    } catch (error) {\n      console.error('‚ùå Update book error:', error);\n      throw error;\n    }\n  },\n\n  deleteBook: async (id: string): Promise<void> => {\n    await api.delete(`/books/${id}`);\n  },\n\n  getLatestBooks: async (limit: number = 8): Promise<Book[]> => {\n    const response = await api.get('/books/latest', { params: { limit } });\n    return adaptBooks(response.data);\n  },\n\n  getBestSellers: async (limit: number = 4): Promise<Book[]> => {\n    const response = await api.get('/books/bestsellers', { params: { limit } });\n    return adaptBooks(response.data);\n  },\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}