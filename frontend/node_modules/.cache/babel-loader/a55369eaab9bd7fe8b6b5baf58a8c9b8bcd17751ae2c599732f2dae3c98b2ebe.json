{"ast":null,"code":"import{api}from'./api';// Adapter function to transform backend user response to frontend format\nconst transformBackendUser=backendUser=>{return{_id:backendUser.id.toString(),email:backendUser.email,name:`${backendUser.firstName} ${backendUser.lastName}`,address:backendUser.address,phone:backendUser.phone,role:backendUser.role==='CUSTOMER'?'USER':'ADMIN',createdAt:backendUser.createdAt||new Date().toISOString(),updatedAt:backendUser.updatedAt||new Date().toISOString()};};export const userAPI={getCurrentUser:async()=>{const response=await api.get('/users/me');return transformBackendUser(response.data);},updateProfile:async data=>{const response=await api.put('/users/me',data);return transformBackendUser(response.data);},changePassword:async data=>{await api.put('/users/me/password',data);},// --- Admin Functions ---\ngetAllUsers:async(page,limit)=>{var _backendData$content;const response=await api.get('/users',{params:{page,limit}});const backendData=response.data;// Adapt backend Spring Boot pagination format to frontend format\nreturn{data:((_backendData$content=backendData.content)===null||_backendData$content===void 0?void 0:_backendData$content.map(transformBackendUser))||[],totalItems:backendData.totalElements||0,totalPages:backendData.totalPages||0,currentPage:backendData.number||0};},updateUser:async(userId,data)=>{const response=await api.patch(`/users/${userId}`,data);return transformBackendUser(response.data);}};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}