{"ast":null,"code":"import{useState,useEffect}from'react';function useLocalStorage(key,initialValue){const[storedValue,setStoredValue]=useState(()=>{if(typeof window==='undefined'){return initialValue;}try{const item=window.localStorage.getItem(key);return item?JSON.parse(item):initialValue;}catch(error){console.error(error);return initialValue;}});const setValue=value=>{try{// Allow value to be a function so we have the same API as useState\nconst valueToStore=value instanceof Function?value(storedValue):value;setStoredValue(valueToStore);if(typeof window!=='undefined'){window.localStorage.setItem(key,JSON.stringify(valueToStore));}}catch(error){console.error(error);}};// This useEffect is to sync tabs\nuseEffect(()=>{const handleStorageChange=e=>{if(e.key===key){try{setStoredValue(e.newValue?JSON.parse(e.newValue):initialValue);}catch(error){console.error(error);setStoredValue(initialValue);}}};window.addEventListener('storage',handleStorageChange);return()=>{window.removeEventListener('storage',handleStorageChange);};},[initialValue,key]);return[storedValue,setValue];}export default useLocalStorage;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}