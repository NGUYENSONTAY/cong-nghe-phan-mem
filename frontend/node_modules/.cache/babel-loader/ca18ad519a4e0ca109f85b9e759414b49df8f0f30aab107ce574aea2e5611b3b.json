{"ast":null,"code":"var _jsxFileName = \"/home/diengb/bansach/bookstore/frontend/src/contexts/CartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport toast from 'react-hot-toast';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(undefined);\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [items, setItems] = useLocalStorage('cart_items', []);\n  const addToCart = (book, quantity) => {\n    setItems(prevItems => {\n      const existingItem = prevItems.find(item => item._id === book._id);\n      const availableStock = book.quantity - ((existingItem === null || existingItem === void 0 ? void 0 : existingItem.quantity) || 0);\n      if (quantity > availableStock) {\n        toast.error(`Rất tiếc, chỉ còn ${book.quantity} sản phẩm có sẵn.`);\n        return prevItems;\n      }\n      if (existingItem) {\n        return prevItems.map(item => item._id === book._id ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      } else {\n        const newItem = {\n          _id: book._id,\n          title: book.title,\n          price: book.price,\n          image: book.images[0],\n          quantity,\n          stock: book.quantity\n        };\n        return [...prevItems, newItem];\n      }\n    });\n    toast.success(`Đã thêm \"${book.title}\" vào giỏ hàng.`);\n  };\n  const removeFromCart = bookId => {\n    setItems(prevItems => prevItems.filter(item => item._id !== bookId));\n    toast.success(\"Đã xóa sản phẩm khỏi giỏ hàng.\");\n  };\n  const updateQuantity = (bookId, newQuantity) => {\n    setItems(prevItems => {\n      const itemToUpdate = prevItems.find(item => item._id === bookId);\n      if (!itemToUpdate) return prevItems;\n      if (newQuantity <= 0) {\n        return prevItems.filter(item => item._id !== bookId);\n      }\n      if (newQuantity > itemToUpdate.stock) {\n        toast.error(`Số lượng tồn kho không đủ. Chỉ còn ${itemToUpdate.stock} sản phẩm.`);\n        return prevItems.map(item => item._id === bookId ? {\n          ...item,\n          quantity: itemToUpdate.stock\n        } : item);\n      }\n      return prevItems.map(item => item._id === bookId ? {\n        ...item,\n        quantity: newQuantity\n      } : item);\n    });\n  };\n  const clearCart = () => {\n    setItems([]);\n  };\n  const getItemQuantity = bookId => {\n    const item = items.find(i => i._id === bookId);\n    return (item === null || item === void 0 ? void 0 : item.quantity) || 0;\n  };\n  const cart = React.useMemo(() => {\n    const totalItems = items.reduce((count, item) => count + item.quantity, 0);\n    const totalAmount = items.reduce((total, item) => total + item.price * item.quantity, 0);\n    return {\n      items,\n      totalItems,\n      totalAmount\n    };\n  }, [items]);\n  const value = {\n    cart,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getItemQuantity\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"cjYtxQZClUdf3+vWjFzD8dh9qNA=\", false, function () {\n  return [useLocalStorage];\n});\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","toast","useLocalStorage","jsxDEV","_jsxDEV","CartContext","undefined","CartProvider","children","_s","items","setItems","addToCart","book","quantity","prevItems","existingItem","find","item","_id","availableStock","error","map","newItem","title","price","image","images","stock","success","removeFromCart","bookId","filter","updateQuantity","newQuantity","itemToUpdate","clearCart","getItemQuantity","i","cart","useMemo","totalItems","reduce","count","totalAmount","total","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["/home/diengb/bansach/bookstore/frontend/src/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\nimport toast from 'react-hot-toast';\nimport { Book, CartItem } from '../types';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\ninterface Cart {\n  items: CartItem[];\n  totalItems: number;\n  totalAmount: number;\n}\n\ninterface CartContextType {\n  cart: Cart;\n  addToCart: (book: Book, quantity: number) => void;\n  removeFromCart: (bookId: string) => void;\n  updateQuantity: (bookId: string, newQuantity: number) => void;\n  clearCart: () => void;\n  getItemQuantity: (bookId: string) => number;\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport const CartProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [items, setItems] = useLocalStorage<CartItem[]>('cart_items', []);\n\n  const addToCart = (book: Book, quantity: number) => {\n    setItems(prevItems => {\n      const existingItem = prevItems.find(item => item._id === book._id);\n      \n      const availableStock = book.quantity - (existingItem?.quantity || 0);\n      if (quantity > availableStock) {\n        toast.error(`Rất tiếc, chỉ còn ${book.quantity} sản phẩm có sẵn.`);\n        return prevItems;\n      }\n      \n      if (existingItem) {\n        return prevItems.map(item =>\n          item._id === book._id ? { ...item, quantity: item.quantity + quantity } : item\n        );\n      } else {\n        const newItem: CartItem = {\n          _id: book._id,\n          title: book.title,\n          price: book.price,\n          image: book.images[0],\n          quantity,\n          stock: book.quantity\n        };\n        return [...prevItems, newItem];\n      }\n    });\n    toast.success(`Đã thêm \"${book.title}\" vào giỏ hàng.`);\n  };\n\n  const removeFromCart = (bookId: string) => {\n    setItems(prevItems => prevItems.filter(item => item._id !== bookId));\n    toast.success(\"Đã xóa sản phẩm khỏi giỏ hàng.\");\n  };\n\n  const updateQuantity = (bookId: string, newQuantity: number) => {\n    setItems(prevItems => {\n      const itemToUpdate = prevItems.find(item => item._id === bookId);\n      if (!itemToUpdate) return prevItems;\n\n      if (newQuantity <= 0) {\n        return prevItems.filter(item => item._id !== bookId);\n      }\n      \n      if (newQuantity > itemToUpdate.stock) {\n        toast.error(`Số lượng tồn kho không đủ. Chỉ còn ${itemToUpdate.stock} sản phẩm.`);\n        return prevItems.map(item =>\n          item._id === bookId ? { ...item, quantity: itemToUpdate.stock } : item\n        );\n      }\n      \n      return prevItems.map(item =>\n        item._id === bookId ? { ...item, quantity: newQuantity } : item\n      );\n    });\n  };\n\n  const clearCart = () => {\n    setItems([]);\n  };\n\n  const getItemQuantity = (bookId: string): number => {\n    const item = items.find(i => i._id === bookId);\n    return item?.quantity || 0;\n  };\n  \n  const cart = React.useMemo<Cart>(() => {\n    const totalItems = items.reduce((count, item) => count + item.quantity, 0);\n    const totalAmount = items.reduce((total, item) => total + item.price * item.quantity, 0);\n    return { items, totalItems, totalAmount };\n  }, [items]);\n\n  const value: CartContextType = {\n    cart,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getItemQuantity\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n\nexport const useCart = (): CartContextType => {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}