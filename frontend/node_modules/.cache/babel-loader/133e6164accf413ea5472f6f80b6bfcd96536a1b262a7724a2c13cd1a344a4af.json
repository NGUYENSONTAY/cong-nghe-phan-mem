{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect,useCallback}from'react';import{authAPI}from'../api/authAPI';import{userAPI}from'../api/userAPI';import toast from'react-hot-toast';import Loading from'../components/common/Loading';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);const handleAuthSuccess=authResponse=>{localStorage.setItem('token',authResponse.token);localStorage.setItem('user',JSON.stringify(authResponse.user));setUser(authResponse.user);};const updateUser=newUser=>{localStorage.setItem('user',JSON.stringify(newUser));setUser(newUser);};const logout=useCallback(()=>{localStorage.removeItem('token');localStorage.removeItem('user');setUser(null);toast.success('Đăng xuất thành công!');},[]);useEffect(()=>{const initializeAuth=async()=>{const token=localStorage.getItem('token');if(token){try{// Luôn lấy thông tin user mới nhất từ API nếu có token\nconst freshUser=await userAPI.getCurrentUser();localStorage.setItem('user',JSON.stringify(freshUser));setUser(freshUser);}catch(error){toast.error('Phiên đăng nhập đã hết hạn.');logout();}}setIsLoading(false);};initializeAuth();},[logout]);const login=async credentials=>{const response=await authAPI.login(credentials);handleAuthSuccess(response);toast.success(`Chào mừng trở lại, ${response.user.name}!`);};const register=async userData=>{await authAPI.register(userData);toast.success('Đăng ký thành công! Vui lòng đăng nhập.');};const value={user,isAuthenticated:!!user,isLoading,login,register,logout,updateUser};// Tránh render children khi đang loading lần đầu\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-screen\",children:/*#__PURE__*/_jsx(Loading,{})});}return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}