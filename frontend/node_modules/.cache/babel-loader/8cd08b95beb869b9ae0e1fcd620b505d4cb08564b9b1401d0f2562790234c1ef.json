{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect,useCallback}from'react';import{authAPI}from'../api/authAPI';import{userAPI}from'../api/userAPI';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);const handleAuthSuccess=authResponse=>{const userData={id:authResponse.id,email:authResponse.email,username:authResponse.username,firstName:authResponse.firstName,lastName:authResponse.lastName,role:authResponse.role,createdAt:new Date().toISOString()// Giả định, vì API login không trả về\n};localStorage.setItem('token',authResponse.token);localStorage.setItem('user',JSON.stringify(userData));setUser(userData);};const updateUser=newUser=>{localStorage.setItem('user',JSON.stringify(newUser));setUser(newUser);};const logout=useCallback(()=>{localStorage.removeItem('token');localStorage.removeItem('user');setUser(null);toast.success('Đăng xuất thành công!');},[]);useEffect(()=>{const initializeAuth=async()=>{const token=localStorage.getItem('token');const savedUser=localStorage.getItem('user');if(token&&savedUser){try{// Tạm thời tin tưởng user data trong local storage để UI nhanh hơn\nsetUser(JSON.parse(savedUser));// Sau đó kiểm tra token với backend\nconst freshUser=await userAPI.getCurrentUser();// Cập nhật lại user data mới nhất\nlocalStorage.setItem('user',JSON.stringify(freshUser));setUser(freshUser);}catch(error){toast.error('Phiên đăng nhập đã hết hạn.');logout();// Xóa token và user nếu không hợp lệ\n}}setIsLoading(false);};initializeAuth();},[logout]);const login=async credentials=>{try{setIsLoading(true);const response=await authAPI.login(credentials);handleAuthSuccess(response);toast.success(`Chào mừng trở lại, ${response.firstName}!`);}catch(error){var _error$response,_error$response$data;toast.error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Đăng nhập thất bại. Vui lòng thử lại.');throw error;}finally{setIsLoading(false);}};const register=async userData=>{try{setIsLoading(true);await authAPI.register(userData);toast.success('Đăng ký thành công! Vui lòng đăng nhập.');}catch(error){var _error$response2,_error$response2$data;toast.error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Đăng ký thất bại. Vui lòng thử lại.');throw error;}finally{setIsLoading(false);}};const value={user,isAuthenticated:!!user,isLoading,login,register,logout,updateUser// Thêm vào context value\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}