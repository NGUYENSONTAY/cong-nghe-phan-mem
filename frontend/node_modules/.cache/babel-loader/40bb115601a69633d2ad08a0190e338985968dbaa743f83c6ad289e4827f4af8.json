{"ast":null,"code":"var _jsxFileName = \"/home/diengb/bansach/bookstore/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { authAPI } from '../api/authAPI';\nimport { userAPI } from '../api/userAPI';\nimport toast from 'react-hot-toast';\nimport Loading from '../components/common/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const handleAuthSuccess = authResponse => {\n    localStorage.setItem('token', authResponse.token);\n    localStorage.setItem('user', JSON.stringify(authResponse.user));\n    setUser(authResponse.user);\n  };\n  const updateUser = newUser => {\n    localStorage.setItem('user', JSON.stringify(newUser));\n    setUser(newUser);\n  };\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    toast.success('Đăng xuất thành công!');\n  }, []);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Luôn lấy thông tin user mới nhất từ API nếu có token\n          const freshUser = await userAPI.getCurrentUser();\n          localStorage.setItem('user', JSON.stringify(freshUser));\n          setUser(freshUser);\n        } catch (error) {\n          toast.error('Phiên đăng nhập đã hết hạn.');\n          logout();\n        }\n      }\n      setIsLoading(false);\n    };\n    initializeAuth();\n  }, [logout]);\n  const login = async credentials => {\n    const response = await authAPI.login(credentials);\n    handleAuthSuccess(response);\n    toast.success(`Chào mừng trở lại, ${response.user.name}!`);\n  };\n  const register = async userData => {\n    await authAPI.register(userData);\n    toast.success('Đăng ký thành công! Vui lòng đăng nhập.');\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n\n  // Tránh render children khi đang loading lần đầu\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 71\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"OYTsW4JTSY8CT2Im7zgLf9qeRWI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","authAPI","userAPI","toast","Loading","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","handleAuthSuccess","authResponse","localStorage","setItem","token","JSON","stringify","updateUser","newUser","logout","removeItem","success","initializeAuth","getItem","freshUser","getCurrentUser","error","login","credentials","response","name","register","userData","value","isAuthenticated","className","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/diengb/bansach/bookstore/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback, ReactNode } from 'react';\nimport { authAPI } from '../api/authAPI';\nimport { userAPI } from '../api/userAPI';\nimport { User, LoginRequest, RegisterRequest, AuthResponse } from '../types';\nimport toast from 'react-hot-toast';\nimport Loading from '../components/common/Loading';\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (credentials: LoginRequest) => Promise<void>;\n  register: (userData: RegisterRequest) => Promise<void>;\n  logout: () => void;\n  updateUser: (newUser: User) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleAuthSuccess = (authResponse: AuthResponse) => {\n    localStorage.setItem('token', authResponse.token);\n    localStorage.setItem('user', JSON.stringify(authResponse.user));\n    setUser(authResponse.user);\n  }\n\n  const updateUser = (newUser: User) => {\n    localStorage.setItem('user', JSON.stringify(newUser));\n    setUser(newUser);\n  };\n\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    toast.success('Đăng xuất thành công!');\n  }, []);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        try {\n          // Luôn lấy thông tin user mới nhất từ API nếu có token\n          const freshUser = await userAPI.getCurrentUser();\n          localStorage.setItem('user', JSON.stringify(freshUser));\n          setUser(freshUser);\n        } catch (error) {\n          toast.error('Phiên đăng nhập đã hết hạn.');\n          logout(); \n        }\n      }\n      setIsLoading(false);\n    };\n\n    initializeAuth();\n  }, [logout]);\n\n  const login = async (credentials: LoginRequest) => {\n    const response = await authAPI.login(credentials);\n    handleAuthSuccess(response);\n    toast.success(`Chào mừng trở lại, ${response.user.name}!`);\n  };\n\n  const register = async (userData: RegisterRequest) => {\n    await authAPI.register(userData);\n    toast.success('Đăng ký thành công! Vui lòng đăng nhập.');\n  };\n\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    register,\n    logout,\n    updateUser,\n  };\n\n  // Tránh render children khi đang loading lần đầu\n  if (isLoading) {\n    return <div className=\"flex items-center justify-center h-screen\"><Loading /></div>;\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}