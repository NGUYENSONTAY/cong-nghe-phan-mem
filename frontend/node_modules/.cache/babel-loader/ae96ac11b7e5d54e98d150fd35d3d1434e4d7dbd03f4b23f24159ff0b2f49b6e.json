{"ast":null,"code":"import { api } from './api';\nconst getDashboard = async () => {\n  const response = await api.get('/admin/dashboard');\n  return response.data;\n};\nconst getOverview = async () => {\n  const response = await api.get('/admin/overview');\n  return response.data;\n};\nconst getBooksStatistics = async () => {\n  const response = await api.get('/admin/books/statistics');\n  return response.data;\n};\nconst getBestSellers = async (limit = 10) => {\n  const response = await api.get('/admin/bestsellers', {\n    params: {\n      limit\n    }\n  });\n  return response.data;\n};\nconst getLargestOrders = async () => {\n  const response = await api.get('/admin/largest-orders');\n  return response.data;\n};\nexport const adminAPI = {\n  getDashboard,\n  getOverview,\n  getBooksStatistics,\n  getBestSellers,\n  getLargestOrders\n};","map":{"version":3,"names":["api","getDashboard","response","get","data","getOverview","getBooksStatistics","getBestSellers","limit","params","getLargestOrders","adminAPI"],"sources":["/home/diengb/bansach/bookstore/frontend/src/api/adminAPI.ts"],"sourcesContent":["import { api } from './api';\n\nexport interface DashboardStats {\n  totalBooks: number;\n  availableBooks: number;\n  totalCategories: number;\n  totalAuthors: number;\n  orderStatistics: {\n    totalOrders: number;\n    pendingOrders: number;\n    confirmedOrders: number;\n    shippedOrders: number;\n    deliveredOrders: number;\n    cancelledOrders: number;\n    totalRevenue: number;\n  };\n  totalRevenue: number;\n}\n\nexport interface OverviewStats {\n  books: {\n    total: number;\n    available: number;\n  };\n  categories: {\n    total: number;\n  };\n  authors: {\n    total: number;\n  };\n  orders: {\n    total: number;\n    pending: number;\n    confirmed: number;\n    shipped: number;\n    delivered: number;\n    cancelled: number;\n  };\n  totalRevenue: number;\n}\n\nexport interface BookStatistics {\n  totalBooks: number;\n  availableBooks: number;\n  outOfStockBooks: number;\n}\n\nconst getDashboard = async (): Promise<DashboardStats> => {\n  const response = await api.get('/admin/dashboard');\n  return response.data;\n};\n\nconst getOverview = async (): Promise<OverviewStats> => {\n  const response = await api.get('/admin/overview');\n  return response.data;\n};\n\nconst getBooksStatistics = async (): Promise<BookStatistics> => {\n  const response = await api.get('/admin/books/statistics');\n  return response.data;\n};\n\nconst getBestSellers = async (limit: number = 10) => {\n  const response = await api.get('/admin/bestsellers', { params: { limit } });\n  return response.data;\n};\n\nconst getLargestOrders = async () => {\n  const response = await api.get('/admin/largest-orders');\n  return response.data;\n};\n\nexport const adminAPI = {\n  getDashboard,\n  getOverview,\n  getBooksStatistics,\n  getBestSellers,\n  getLargestOrders,\n}; "],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AA+C3B,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAqC;EACxD,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,kBAAkB,CAAC;EAClD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAoC;EACtD,MAAMH,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,iBAAiB,CAAC;EACjD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAqC;EAC9D,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,yBAAyB,CAAC;EACzD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMG,cAAc,GAAG,MAAAA,CAAOC,KAAa,GAAG,EAAE,KAAK;EACnD,MAAMN,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,oBAAoB,EAAE;IAAEM,MAAM,EAAE;MAAED;IAAM;EAAE,CAAC,CAAC;EAC3E,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMM,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMR,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,uBAAuB,CAAC;EACvD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAG;EACtBV,YAAY;EACZI,WAAW;EACXC,kBAAkB;EAClBC,cAAc;EACdG;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}