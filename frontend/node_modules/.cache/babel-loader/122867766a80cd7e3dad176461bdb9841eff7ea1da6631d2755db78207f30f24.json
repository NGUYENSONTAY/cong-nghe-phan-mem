{"ast":null,"code":"import { api } from './api';\nexport const uploadAPI = {\n  validateFile: file => {\n    const maxSize = 5 * 1024 * 1024; // 5MB\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n    if (!file) {\n      return {\n        isValid: false,\n        error: 'Không có file được chọn'\n      };\n    }\n    if (file.size > maxSize) {\n      return {\n        isValid: false,\n        error: 'Kích thước file quá lớn (tối đa 5MB)'\n      };\n    }\n    if (!allowedTypes.includes(file.type)) {\n      return {\n        isValid: false,\n        error: 'Định dạng file không được hỗ trợ (chỉ hỗ trợ JPG, PNG, GIF, WebP)'\n      };\n    }\n    return {\n      isValid: true\n    };\n  },\n  uploadImage: async file => {\n    const validation = uploadAPI.validateFile(file);\n    if (!validation.isValid) {\n      throw new Error(validation.error);\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/upload/image', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    if (response.data.success) {\n      return response.data.url;\n    } else {\n      throw new Error(response.data.message || 'Upload failed');\n    }\n  },\n  getImages: async (page = 0, size = 20) => {\n    const response = await api.get('/upload/images', {\n      params: {\n        page,\n        size\n      }\n    });\n    return response.data;\n  },\n  deleteImage: async filename => {\n    const response = await api.delete(`/upload/images/${filename}`);\n    return response.data;\n  },\n  getImageUrl: filename => {\n    var _process$env$REACT_AP;\n    return `${(_process$env$REACT_AP = process.env.REACT_APP_API_URL) === null || _process$env$REACT_AP === void 0 ? void 0 : _process$env$REACT_AP.replace('/api', '')}/uploads/${filename}`;\n  },\n  formatFileSize: bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n};","map":{"version":3,"names":["api","uploadAPI","validateFile","file","maxSize","allowedTypes","isValid","error","size","includes","type","uploadImage","validation","Error","formData","FormData","append","response","post","headers","data","success","url","message","getImages","page","get","params","deleteImage","filename","delete","getImageUrl","_process$env$REACT_AP","process","env","REACT_APP_API_URL","replace","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed"],"sources":["/home/diengb/bansach/bookstore/frontend/src/api/uploadAPI.ts"],"sourcesContent":["import { api } from './api';\n\nexport interface FileValidationResult {\n  isValid: boolean;\n  error?: string;\n}\n\nexport const uploadAPI = {\n  validateFile: (file: File): FileValidationResult => {\n    const maxSize = 5 * 1024 * 1024; // 5MB\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n\n    if (!file) {\n      return { isValid: false, error: 'Không có file được chọn' };\n    }\n\n    if (file.size > maxSize) {\n      return { isValid: false, error: 'Kích thước file quá lớn (tối đa 5MB)' };\n    }\n\n    if (!allowedTypes.includes(file.type)) {\n      return { isValid: false, error: 'Định dạng file không được hỗ trợ (chỉ hỗ trợ JPG, PNG, GIF, WebP)' };\n    }\n\n    return { isValid: true };\n  },\n\n  uploadImage: async (file: File): Promise<string> => {\n    const validation = uploadAPI.validateFile(file);\n    if (!validation.isValid) {\n      throw new Error(validation.error);\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await api.post('/upload/image', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n\n    if (response.data.success) {\n      return response.data.url;\n    } else {\n      throw new Error(response.data.message || 'Upload failed');\n    }\n  },\n\n  getImages: async (page: number = 0, size: number = 20) => {\n    const response = await api.get('/upload/images', {\n      params: { page, size }\n    });\n    return response.data;\n  },\n\n  deleteImage: async (filename: string) => {\n    const response = await api.delete(`/upload/images/${filename}`);\n    return response.data;\n  },\n\n  getImageUrl: (filename: string): string => {\n    return `${process.env.REACT_APP_API_URL?.replace('/api', '')}/uploads/${filename}`;\n  },\n\n  formatFileSize: (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}